#include <vector>

using namespace std;

class Solution {
public:
    void markAdj (vector<vector<char>>& grid, int i ,int j){
        int rows=grid.size();
        int cols=grid[0].size();
        if(i<0 || i >= rows || j<0 || j>=cols)
            return;
        if(grid[i][j]=='0')
            return;
        grid[i][j]='0';
        markAdj(grid,i+1,j);
        markAdj(grid,i,j+1);
        markAdj(grid,i-1,j);
        markAdj(grid,i,j-1);

    }
    int numIslands(vector<vector<char>>& grid) {
        int rows=grid.size();
        int cols=grid[0].size();
        int count=0;
        for (int i = 0; i <rows ; ++i) {
            for (int j = 0; j < cols; ++j) {
                if(grid[i][j]=='0')
                    continue;
                count++;
                markAdj(grid,i,j);
            }
        }
        return count;
    }
};


int main(){
    Solution sol;
    vector<vector<char>> grid={{'1','1','0','0','1'},
                               {'1','1','0','0','0'},
                               {'0','0','1','0','0'},
                               {'1','0','0','1','1'}};
    int res = sol.numIslands(grid);
    return 0;
}

